name: Staged Deployment Pipeline

on:
  push:
    branches:
      - development
      - qa
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: choice
        options:
          - development
          - qa
          - production

jobs:
  # Development deployment - auto deploy
  deploy-development:
    name: Deploy to Development
    if: github.ref == 'refs/heads/development'
    runs-on: ubuntu-latest
    environment:
      name: development
      url: ${{ steps.deploy.outputs.url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Next.js app
        run: npm run build
        env:
          NEXT_PUBLIC_ENV: development

      - name: Deploy to Netlify
        id: deploy
        uses: nwtgck/actions-netlify@v3.0
        with:
          publish-dir: './.next'
          production-branch: development
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions - Development"
          enable-pull-request-comment: false
          enable-commit-comment: true
          overwrites-pull-request-comment: false
          alias: development
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  # QA deployment - auto deploy with notification
  deploy-qa:
    name: Deploy to QA
    if: github.ref == 'refs/heads/qa'
    runs-on: ubuntu-latest
    environment:
      name: qa
      url: ${{ steps.deploy.outputs.url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests (if any)
        run: npm test --if-present

      - name: Build Next.js app
        run: npm run build
        env:
          NEXT_PUBLIC_ENV: qa

      - name: Deploy to Netlify
        id: deploy
        uses: nwtgck/actions-netlify@v3.0
        with:
          publish-dir: './.next'
          production-branch: qa
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions - QA"
          enable-pull-request-comment: false
          enable-commit-comment: true
          overwrites-pull-request-comment: false
          alias: qa
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  # Production deployment - manual approval required
  deploy-production:
    name: Deploy to Production
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment:
      name: production
      url: ${{ steps.deploy.outputs.url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests (if any)
        run: npm test --if-present

      - name: Build Next.js app
        run: npm run build
        env:
          NEXT_PUBLIC_ENV: production

      - name: Deploy to Netlify
        id: deploy
        uses: nwtgck/actions-netlify@v3.0
        with:
          publish-dir: './.next'
          production-deploy: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions - Production"
          enable-pull-request-comment: false
          enable-commit-comment: true
          overwrites-pull-request-comment: false
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

      - name: Create deployment tag
        if: success()
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          TAG_NAME="production-$(date +'%Y%m%d-%H%M%S')"
          git tag -a $TAG_NAME -m "Production deployment $TAG_NAME"
          git push origin $TAG_NAME
